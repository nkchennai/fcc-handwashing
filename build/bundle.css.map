{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "App.svelte",
    "HowTo.svelte",
    "ProgressBar.svelte",
    "Timer.svelte"
  ],
  "sourcesContent": [
    "<script>\r\n\timport Timer from './Timer.svelte';\r\n\timport HowTo from './HowTo.svelte';\r\n\tlet audio;\r\n\r\n\tfunction timerEnds(e) {\r\n\t\taudio.play();\r\n\t}\r\n</script>\r\n\r\n<style>\r\n\th1, h3{\r\n\t\ttext-align: center;\r\n\t}\r\n</style>\r\n\r\n<h1>Handwashing App</h1>\r\n\r\n<Timer on:end={timerEnds}></Timer>\r\n<HowTo></HowTo>\r\n\r\n<h3>\r\n\t<a href=\"https://www.who.int/gpsc/clean_hands_protection/en/\">Picture Source</a><br>\r\n\t<a href=\"https://freesound.org/people/metrostock99/sounds/345086/\">Sound Source</a>\r\n</h3>\r\n\r\n<!-- svelte-ignore a11y-media-has-caption -->\r\n<audio src=\"sound.wav\" bind:this={audio}></audio>",
    "<style>\r\n    img {\r\n        max-width: 100%;\r\n    }\r\n</style>\r\n<div bp=\"grid\">\r\n    <img bp=\"offset-5@md 4@md 12@sm\" src=\"handwashing.gif\" alt=\"How to wash your hands\">\r\n</div>",
    "<script>\r\n    export let progress = 0;\r\n</script>\r\n\r\n<style>\r\n    .progress-container {\r\n        margin: 20px 0;\r\n        border: solid rgba(194, 194, 194) 1px;    \r\n    }\r\n    .progress-bar {\r\n        height: 30px;\r\n        background-color: rgba(77,199,  55);\r\n    }\r\n    \r\n</style>\r\n\r\n<div bp=\"grid\">\r\n    <div bp=\"offset-5@md 4@md 12@sm\" class=\"progress-container\">\r\n        <div class=\"progress-bar\" style=\"width:{progress}%\">\r\n            <span class=\"sr-only\"> done {progress }%</span>\r\n        </div>\r\n    </div>\r\n</div>",
    "<script>\r\n    import {createEventDispatcher} from 'svelte';\r\n    import ProgressBar from './ProgressBar.svelte';\r\n    const totalSeconds = 5;\r\n    let secondsLeft = totalSeconds;\r\n    let isRunning = false;\r\n    let timerInterval = null;\r\n    $: progress = ((totalSeconds - secondsLeft) / totalSeconds) * 100;\r\n    const dispatch = createEventDispatcher();\r\n    \r\n    function startTimer() {\r\n        timerInterval= setInterval(decreaseSeconds, 1000);\r\n    }\r\n\r\n    function decreaseSeconds() {\r\n        secondsLeft -= 1;\r\n        isRunning = true;\r\n        if (secondsLeft == 0) {\r\n            clearInterval(timerInterval);\r\n            isRunning = false;\r\n            resetSecondsLeft();\r\n            dispatch('end', 'end timer');\r\n        }  \r\n    }\r\n\r\n    function resetSecondsLeft() {\r\n        secondsLeft = totalSeconds;\r\n    }\r\n</script>\r\n\r\n<style>\r\n    h2 {\r\n        margin:0;\r\n    }\r\n    .start {\r\n        background-color: rgb(154, 73, 73);\r\n        width: 100%;\r\n        margin: 10px 0;\r\n    }\r\n\r\n    .start[disabled] {\r\n        background-color: rgb(194,194, 194);\r\n        cursor: not-allowed;\r\n    }\r\n</style>\r\n\r\n<div bp=\"grid\">\r\n    <h2 bp=\"offset-5@md 4@md 12@sm\">Seconds Left: {secondsLeft}</h2>\r\n</div>\r\n\r\n<ProgressBar {progress}></ProgressBar>\r\n\r\n\r\n<div bp=\"grid\">\r\n    <button bp=\"offset-5@md 4@md 12@sm\" disabled={isRunning} class=\"start\" on:click={startTimer}>Start</button>\r\n    </div> "
  ],
  "names": [],
  "mappings": "AAWC,gBAAE,CAAE,gBAAE,CAAC,AACN,UAAU,CAAE,MAAM,AACnB,CAAC;ACZE,GAAG,eAAC,CAAC,AACD,SAAS,CAAE,IAAI,AACnB,CAAC;ACED,mBAAmB,eAAC,CAAC,AACjB,MAAM,CAAE,IAAI,CAAC,CAAC,CACd,MAAM,CAAE,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,AACzC,CAAC,AACD,aAAa,eAAC,CAAC,AACX,MAAM,CAAE,IAAI,CACZ,gBAAgB,CAAE,KAAK,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,AACvC,CAAC;ACmBD,EAAE,eAAC,CAAC,AACA,OAAO,CAAC,AACZ,CAAC,AACD,MAAM,eAAC,CAAC,AACJ,gBAAgB,CAAE,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAClC,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CAAC,CAAC,AAClB,CAAC,AAED,MAAM,CAAC,QAAQ,CAAC,eAAC,CAAC,AACd,gBAAgB,CAAE,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CACnC,MAAM,CAAE,WAAW,AACvB,CAAC"
}